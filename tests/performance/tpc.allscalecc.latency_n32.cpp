/**
 * ------------------------ Auto-generated Code ------------------------
 *           This code was generated by the Insieme Compiler
 * ---------------------------------------------------------------------
 */
#include <algorithm>
#include <alloca.h>
#include <allscale/api/user/data/binary_tree.h>
#include <allscale/runtime.hpp>
#include <allscale/utils/serializer.h>
#include <allscale/utils/vector.h>
#include <array>
#include <assert.h>
#include <chrono>
#include <iomanip>
#include <iostream>
#include <stdbool.h>
#include <stdint.h>
#include <utility>
#include <vector>

#ifdef __cplusplus
#define INS_INIT(...) __VA_ARGS__
#else
#define INS_INIT(...) (__VA_ARGS__)
#endif
#ifdef __cplusplus
#include <new>
#define INS_INPLACE_INIT(Loc,Type) new(Loc) Type
#else
#define INS_INPLACE_INIT(Loc,Type) *(Loc) = (Type)
#endif
#ifdef __cplusplus
				/** Workaround for libstdc++/libc bug.
				 *  There's an inconsistency between libstdc++ and libc regarding whether
				 *  ::gets is declared or not, which is only evident when using certain
				 *  compilers and language settings
				 *  (tested positively with clang 3.9 --std=c++14 and libc 2.17).
				 */
				#include <initializer_list>  // force libstdc++ to include its config
				#undef _GLIBCXX_HAVE_GETS    // correct broken config
#endif

/* ------- Program Code --------- */

struct __wi_main_variant_1;
typedef struct __wi_main_variant_1 __wi_main_variant_1;

struct __wi_main_can_split;
typedef struct __wi_main_can_split __wi_main_can_split;

struct __wi_main_name {
    static const char* name() { return "__wi_main"; }
};

struct __wi_main_variant_0;
typedef struct __wi_main_variant_0 __wi_main_variant_0;

using __wi_main_work = allscale::work_item_description<int32_t, __wi_main_name, allscale::no_serialization, __wi_main_variant_0, __wi_main_variant_1, __wi_main_can_split >;

/* ------- Function Definitions --------- */
int32_t main(int32_t var_0, char** var_1) {
    return allscale::runtime::main_wrapper<__wi_main_work >(var_0, var_1);
}

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12 {
    ;
    ;
    int64_t operator()(std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > const& p2, std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > const& p3) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_BoundingBox_7;
typedef struct IMP_BoundingBox_7 IMP_BoundingBox_7;

struct DummyCtorParamType;
typedef struct DummyCtorParamType DummyCtorParamType;

struct IMP_BoundingBox_7 {
    allscale::utils::Vector<float, 7 > low;
    allscale::utils::Vector<float, 7 > high;;
    IMP_BoundingBox_7();
    IMP_BoundingBox_7(IMP_BoundingBox_7 const& p2) = default;
    IMP_BoundingBox_7(IMP_BoundingBox_7&& p2) = default;
    IMP_BoundingBox_7(allscale::utils::Vector<float, 7 >&& p2, allscale::utils::Vector<float, 7 >&& p3, DummyCtorParamType p4);
    ~IMP_BoundingBox_7() = default;
    IMP_BoundingBox_7& operator=(IMP_BoundingBox_7 const& p2) = default;
    IMP_BoundingBox_7& operator=(IMP_BoundingBox_7&& p2) = default;
    bool contains_returns_bool(allscale::utils::Vector<float, 7 > const& p2) const;
    float minimumDistanceSquared_returns_distance_t(allscale::utils::Vector<float, 7 > const& p2) const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_BoundingBox_7 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_Args_instance1;
typedef struct IMP_Args_instance1 IMP_Args_instance1;

struct IMP_Args_instance1 {
    allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > node;
    IMP_BoundingBox_7 box;;
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_Args_instance1 load(allscale::utils::ArchiveReader& var_0);
};

ALLSCALE_REGISTER_TREETURE_TYPE(uint64_t)
using data_item_type_1 = allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_1)
REGISTER_DATAITEMSERVER(data_item_type_1)
struct __wi_allscale_wi_2_variant_0;
typedef struct __wi_allscale_wi_2_variant_0 __wi_allscale_wi_2_variant_0;

struct __wi_allscale_wi_2_name {
    static const char* name() { return "__wi_allscale_wi_2"; }
};

struct __wi_allscale_wi_2_can_split;
typedef struct __wi_allscale_wi_2_can_split __wi_allscale_wi_2_can_split;

struct __wi_allscale_wi_2_variant_1;
typedef struct __wi_allscale_wi_2_variant_1 __wi_allscale_wi_2_variant_1;

using __wi_allscale_wi_2_work = allscale::work_item_description<uint64_t, __wi_allscale_wi_2_name, allscale::do_serialization, __wi_allscale_wi_2_variant_0, __wi_allscale_wi_2_variant_1, __wi_allscale_wi_2_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<uint64_t > allscale_fun_232(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_2_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1), hpx::util::get<2 >(var_1), hpx::util::get<3 >(var_1));
}
/* ------- Function Definitions --------- */
allscale::treeture<uint64_t > IMP_twoPointCorrelation_7_32_returns_treeture_lt_std_colon__colon_size_t_gt_(allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const& var_0, allscale::utils::Vector<float, 7 > const& var_1, float var_2) {
    float var_3 = var_2 * var_2;
    IMP_BoundingBox_7 var_4;
    return allscale::runtime::make_prec_operation<IMP_Args_instance1, uint64_t >((hpx::util::tuple<allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const&)INS_INIT(hpx::util::tuple<allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float >){var_0, var_1, var_3}, &allscale_fun_232)((IMP_Args_instance1 const&)INS_INIT(IMP_Args_instance1){(allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 >&&)allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 >{}, (IMP_BoundingBox_7 const&)var_4});
}
struct allscale_type_76;
typedef struct allscale_type_76 allscale_type_76;

template<typename T>
struct is_allscale_fixed_sized_array : public std::false_type {};

template<typename T>
struct to_std_array_type;

namespace allscale {
    namespace utils {
        template<typename T>
        struct serializer<T,typename std::enable_if<is_allscale_fixed_sized_array<T>::value,void>::type> {
            using array_t = typename to_std_array_type<T>::type;
            static T load(ArchiveReader& a) {
                return *reinterpret_cast<T*>(&serializer<array_t>::load(a)[0]);
            }
            static void store(ArchiveWriter& a, const T& value) {
                serializer<array_t>::store(a,reinterpret_cast<const array_t&>(value));
            }
        };
    }
}

struct allscale_type_76 {
    char data[2];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_76> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_76> { using type = std::array<char,2u>; };

struct allscale_type_77;
typedef struct allscale_type_77 allscale_type_77;

struct allscale_type_77 {
    char data[3];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_77> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_77> { using type = std::array<char,3u>; };

struct allscale_type_78;
typedef struct allscale_type_78 allscale_type_78;

struct allscale_type_78 {
    char data[16];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_78> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_78> { using type = std::array<char,16u>; };

struct allscale_type_154;
typedef struct allscale_type_154 allscale_type_154;

struct allscale_type_154 {
    char data[7];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_154> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_154> { using type = std::array<char,7u>; };

struct allscale_type_54;
typedef struct allscale_type_54 allscale_type_54;

struct allscale_type_54 {
    char data[18];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_54> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_54> { using type = std::array<char,18u>; };

struct allscale_type_95;
typedef struct allscale_type_95 allscale_type_95;

struct allscale_type_95 {
    char data[4];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_95> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_95> { using type = std::array<char,4u>; };

struct IMP_Args;
typedef struct IMP_Args IMP_Args;

struct IMP_Args {
    allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > node;
    allscale::utils::Vector<float, 7 > min;
    allscale::utils::Vector<float, 7 > max;;
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_Args load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_1_variant_0;
typedef struct __wi_allscale_wi_1_variant_0 __wi_allscale_wi_1_variant_0;

struct __wi_allscale_wi_1_can_split;
typedef struct __wi_allscale_wi_1_can_split __wi_allscale_wi_1_can_split;

struct __wi_allscale_wi_1_variant_1;
typedef struct __wi_allscale_wi_1_variant_1 __wi_allscale_wi_1_variant_1;

struct __wi_allscale_wi_1_name {
    static const char* name() { return "__wi_allscale_wi_1"; }
};

using __wi_allscale_wi_1_work = allscale::work_item_description<void, __wi_allscale_wi_1_name, allscale::do_serialization, __wi_allscale_wi_1_variant_0, __wi_allscale_wi_1_variant_1, __wi_allscale_wi_1_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_121(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_1_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
void allscale_fun_100(allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >& var_0, allscale::utils::Vector<float, 7 > const& var_1, allscale::utils::Vector<float, 7 > const& var_2) {
    allscale::runtime::make_prec_operation<IMP_Args, void >((hpx::util::tuple<allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const&)INS_INIT(hpx::util::tuple<allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > >){(allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const&)var_0}, &allscale_fun_121)((IMP_Args const&)INS_INIT(IMP_Args){(allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 >&&)allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 >{}, var_1, var_2}).get_result();
}
/* ------- Function Definitions --------- */
void IMP_fill_7_32_returns_void(allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >& var_0, float var_1, float var_2) {
    allscale::utils::Vector<float, 7 > var_3{(var_1)};
    allscale::utils::Vector<float, 7 > var_4{(var_2)};
    allscale_fun_100(var_0, var_3, var_4);
}
struct allscale_type_79;
typedef struct allscale_type_79 allscale_type_79;

struct allscale_type_79 {
    char data[10];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_79> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_79> { using type = std::array<char,10u>; };

struct allscale_type_84;
typedef struct allscale_type_84 allscale_type_84;

struct allscale_type_84 {
    char data[14];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_84> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_84> { using type = std::array<char,14u>; };

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13;
typedef struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13;

typedef std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > allscale_type_18();

typedef allscale_type_18* allscale_type_21;

struct IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13 {
    operator allscale_type_21() const;
    ;
    ;
    std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > operator()() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13 load(allscale::utils::ArchiveReader& var_0);
};

struct allscale_type_259;
typedef struct allscale_type_259 allscale_type_259;

struct allscale_type_259 {
    char data[12];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_259> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_259> { using type = std::array<char,12u>; };

struct allscale_type_257;
typedef struct allscale_type_257 allscale_type_257;

struct allscale_type_257 {
    char data[6];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_257> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_257> { using type = std::array<char,6u>; };

struct allscale_type_258;
typedef struct allscale_type_258 allscale_type_258;

struct allscale_type_258 {
    char data[15];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_258> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_258> { using type = std::array<char,15u>; };

struct allscale_type_260;
typedef struct allscale_type_260 allscale_type_260;

struct allscale_type_260 {
    char data[29];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_260> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_260> { using type = std::array<char,29u>; };

struct allscale_type_153;
typedef struct allscale_type_153 allscale_type_153;

struct allscale_type_153 {
    char data[33];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_153> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_153> { using type = std::array<char,33u>; };

struct allscale_type_74;
typedef struct allscale_type_74 allscale_type_74;

struct allscale_type_74 {
    char data[30];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_74> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_74> { using type = std::array<char,30u>; };

struct allscale_type_75;
typedef struct allscale_type_75 allscale_type_75;

struct allscale_type_75 {
    char data[13];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_75> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_75> { using type = std::array<char,13u>; };

/* ------- Function Definitions --------- */
allscale::utils::Vector<float, 7 > IMP_getRandomPoint_7_returns_Point_lt_7UL_gt_(allscale::utils::Vector<float, 7 > const& var_0, allscale::utils::Vector<float, 7 > const& var_1) {
    allscale::utils::Vector<float, 7 > var_2;
    {
        for (uint32_t var_3 = (uint32_t)0; var_3 < (uint32_t)7ul; ++var_3) {
            var_2.operator[]((uint64_t)var_3) = var_0.operator[]((uint64_t)var_3) + (float)rand() / (float)2147483647 * (var_1.operator[]((uint64_t)var_3) - var_0.operator[]((uint64_t)var_3));
        };
    };
    return (allscale::utils::Vector<float, 7 >&&)var_2;
}
/* ------- Function Definitions --------- */
int32_t IMP_main(int32_t var_0, char** var_1) {
    const int32_t var_2 = 7;
    const uint64_t var_3 = (uint64_t)32;
    uint64_t var_4 = (uint64_t)1000;
    if (var_0 > 1) {
        var_4 = (uint64_t)atoi(var_1[1]);
    };
    const float var_5 = (float)0;
    const float var_6 = (float)100;
    const float var_7 = (float)20;
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13 var_8 = (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13&&)INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13){};
    IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12 var_9 = (IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12&&)INS_INIT(IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12){};
    std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > var_10 = (std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > >&&)var_8.operator()();
    std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > var_11 = (std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > const&)var_10;
    std::cout << "Two-Point-Correlation with 2^" << var_3 << " points in [" << var_5 << "," << var_6 << ")^" << var_2 << " space, radius=" << var_7 << ", performing M=" << var_4 << " queries\n";
    std::cout << "Creating ... " << &std::flush;
    var_10 = var_8.operator()();
    allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > var_12 = allscale::runtime::DataItemManager::create<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >();
    var_11 = var_8.operator()();
    std::cout << std::setw(6) << var_9.operator()(var_10, var_11) << "ms\n";
    std::cout << "Filling  ... " << &std::flush;
    var_10 = var_8.operator()();
    IMP_fill_7_32_returns_void(var_12, var_5, var_6);
    var_11 = var_8.operator()();
    std::cout << std::setw(6) << var_9.operator()(var_10, var_11) << "ms\n";
    std::cout << "\n\n ----- Benchmarking -----\n\n";
    std::cout << "Creating benchmark input set (M=" << var_4 << ") ... " << &std::flush;
    var_10 = var_8.operator()();
    std::vector<allscale::utils::Vector<float, 7 >> var_13;
    {
        for (uint64_t var_14 = (uint64_t)0; var_14 < var_4; ++var_14) {
            var_13.push_back(IMP_getRandomPoint_7_returns_Point_lt_7UL_gt_(allscale::utils::Vector<float, 7 >{var_5}, allscale::utils::Vector<float, 7 >{var_6}));
        };
    };
    var_11 = var_8.operator()();
    std::cout << std::setw(6) << var_9.operator()(var_10, var_11) << "ms\n";
    std::cout << "Benchmarking ... " << &std::flush;
    var_10 = var_8.operator()();
    std::vector<allscale::utils::Vector<float, 7 >>& var_15 = var_13;
    std::vector<allscale::utils::Vector<float, 7 >>::iterator var_16 = (std::vector<allscale::utils::Vector<float, 7 >>::iterator&&)var_15.begin();
    std::vector<allscale::utils::Vector<float, 7 >>::iterator var_17 = (std::vector<allscale::utils::Vector<float, 7 >>::iterator&&)var_15.end();
    while (var_16 != var_17) {
        allscale::utils::Vector<float, 7 > const& var_18 = var_16.operator*();
        {
            IMP_twoPointCorrelation_7_32_returns_treeture_lt_std_colon__colon_size_t_gt_(var_12, var_18, var_7).get_result();
            var_16.operator++();
        };
    };
    var_11 = var_8.operator()();
    int64_t var_19 = var_9.operator()(var_10, var_11);
    std::cout << std::setw(22) << var_19 << "ms - ";
    std::cout << (uint64_t)var_19 / var_4 << "ms per query, " << var_4 * (uint64_t)1000 / (uint64_t)var_19 << " queries/s\n";
    std::cout << "\n ------------------------\n\n";
    return 0;
}
ALLSCALE_REGISTER_TREETURE_TYPE(int32_t)
/* ------- Function Definitions --------- */
allscale::treeture<int32_t > allscale_fun_3(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale::treeture<int32_t >(IMP_main(hpx::util::get<0 >(var_0), hpx::util::get<1 >(var_0)));
}
struct __wi_main_variant_1 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple<int32_t, char** > const& var_0);
    static constexpr bool valid = true;
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
int64_t IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12::operator()(std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > const& var_1, std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > const& var_2) const {
    if (getenv("NO_TIME_IN_OUTPUT") != (char*)0) {
        return (int64_t)-1;
    };
    return std::chrono::duration_cast<std::chrono::duration<int64_t, std::ratio<1, 1000 > >, int64_t, std::ratio<1, 1000000000 > >((var_2 - var_1)).count();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12_long_const_space_type_minus_parameter_minus_0_minus_0_space__ampersand__const_space_type_minus_parameter_minus_0_minus_1_space__ampersand__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_23_12::store(allscale::utils::ArchiveWriter& var_1) const { }
struct DummyCtorParamType {
    ;
    ;
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_BoundingBox_7::IMP_BoundingBox_7() : low(), high() {
    float var_1 = std::numeric_limits<float>::max();
    {
        for (uint32_t var_2 = (uint32_t)0; var_2 < (uint32_t)7ul; ++var_2) {
            {
                (*this).low.operator[]((uint64_t)var_2) = 0.0f - var_1;
                (*this).high.operator[]((uint64_t)var_2) = var_1;
            };
        };
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_BoundingBox_7::IMP_BoundingBox_7(allscale::utils::Vector<float, 7 >&& var_1, allscale::utils::Vector<float, 7 >&& var_2, DummyCtorParamType var_3) : low(var_1), high(var_2) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
float IMP_allscale_colon__colon_utils_colon__colon_sumOfSquares_float_7_returns_float(allscale::utils::Vector<float, 7 > const& var_0) {
    float var_1 = 0.0f;
    {
        for (uint32_t var_2 = (uint32_t)0; var_2 < (uint32_t)7ul; ++var_2) {
            var_1 += var_0.operator[]((uint64_t)var_2) * var_0.operator[]((uint64_t)var_2);
        };
    };
    return var_1;
}
/* ------- Function Definitions --------- */
float IMP_lengthSquared_7_returns_distance_t(allscale::utils::Vector<float, 7 > const& var_0) {
    return IMP_allscale_colon__colon_utils_colon__colon_sumOfSquares_float_7_returns_float(var_0);
}
/* ------- Function Definitions --------- */
float IMP_BoundingBox_7::minimumDistanceSquared_returns_distance_t(allscale::utils::Vector<float, 7 > const& var_1) const {
    allscale::utils::Vector<float, 7 > var_2;
    {
        for (uint32_t var_3 = (uint32_t)0; var_3 < (uint32_t)7ul; ++var_3) {
            var_2.operator[]((uint64_t)var_3) = std::max((*this).low.operator[]((uint64_t)var_3) - var_1.operator[]((uint64_t)var_3), std::max(var_1.operator[]((uint64_t)var_3) - (*this).high.operator[]((uint64_t)var_3), (float)0));
        };
    };
    return IMP_lengthSquared_7_returns_distance_t(var_2);
}
/* ------- Function Definitions --------- */
bool IMP_BoundingBox_7::contains_returns_bool(allscale::utils::Vector<float, 7 > const& var_1) const {
    return (*this).low.dominatedBy(var_1) && var_1.strictlyDominatedBy((*this).high);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_BoundingBox_7 IMP_BoundingBox_7::load(allscale::utils::ArchiveReader& var_0) {
    allscale::utils::Vector<float, 7 > var_1 = var_0.read<allscale::utils::Vector<float, 7 > >();
    allscale::utils::Vector<float, 7 > var_2 = var_0.read<allscale::utils::Vector<float, 7 > >();
    DummyCtorParamType var_3;
    return {std::move(var_1), std::move(var_2), var_3};
}
/* ------- Function Definitions --------- */
void IMP_BoundingBox_7::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::utils::Vector<float, 7 > >((*this).low);
    var_1.write<allscale::utils::Vector<float, 7 > >((*this).high);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_Args_instance1::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > >((*this).node);
    var_1.write<IMP_BoundingBox_7 >((*this).box);
}
/* ------- Function Definitions --------- */
IMP_Args_instance1 IMP_Args_instance1::load(allscale::utils::ArchiveReader& var_0) {
    allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > var_1 = var_0.read<allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > >();
    IMP_BoundingBox_7 var_2 = var_0.read<IMP_BoundingBox_7 >();
    return {std::move(var_1), std::move(var_2)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
allscale::utils::Vector<float, 7 >& IMP_allscale_colon__colon_utils_colon__colon__operator_minus_assign_(allscale::utils::Vector<float, 7 >& var_0, allscale::utils::Vector<float, 7 > const& var_1) {
    {
        for (uint64_t var_2 = (uint64_t)0; var_2 < 7ul; ++var_2) {
            var_0.operator[](var_2) -= var_1.operator[](var_2);
        };
    };
    return var_0;
}
/* ------- Function Definitions --------- */
allscale::utils::Vector<float, 7 > IMP_allscale_colon__colon_utils_colon__colon__operator_minus_(allscale::utils::Vector<float, 7 > const& var_0, allscale::utils::Vector<float, 7 > const& var_1) {
    allscale::utils::Vector<float, 7 > var_2 = var_0;
    return (allscale::utils::Vector<float, 7 > const&)IMP_allscale_colon__colon_utils_colon__colon__operator_minus_assign_(var_2, var_1);
}
/* ------- Function Definitions --------- */
float IMP_distanceSquared_7_returns_distance_t(allscale::utils::Vector<float, 7 > const& var_0, allscale::utils::Vector<float, 7 > const& var_1) {
    return IMP_allscale_colon__colon_utils_colon__colon_sumOfSquares_float_7_returns_float(IMP_allscale_colon__colon_utils_colon__colon__operator_minus_(var_0, var_1));
}
/* ------- Function Definitions --------- */
allscale::treeture<uint64_t > allscale_fun_236(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > const&& var_1 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const&)hpx::util::get<1 >(var_0));
    allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > const& var_2 = ((IMP_Args_instance1 const&)hpx::util::get<0 >(var_0)).node;
    IMP_BoundingBox_7 const& var_3 = ((IMP_Args_instance1 const&)hpx::util::get<0 >(var_0)).box;
    if (var_3.minimumDistanceSquared_returns_distance_t(hpx::util::get<2 >(var_0)) > hpx::util::get<3 >(var_0)) {
        return allscale::treeture<uint64_t >((uint64_t)0);
    };
    allscale::utils::Vector<float, 7 > const& var_4 = var_1.operator[](var_2);
    uint64_t var_5 = (uint64_t)0;
    if (IMP_distanceSquared_7_returns_distance_t(hpx::util::get<2 >(var_0), var_4) < hpx::util::get<3 >(var_0)) {
        var_5++;
    };
    if (var_2.isLeaf()) {
        return allscale::treeture<uint64_t >(var_5);
    };
    IMP_BoundingBox_7 var_6 = var_3;
    IMP_BoundingBox_7 var_7 = var_3;
    uint64_t var_8 = (uint64_t)var_2.getLevel() % 7ul;
    var_6.high.operator[](var_8) = var_4.operator[](var_8);
    var_7.low.operator[](var_8) = var_4.operator[](var_8);
    allscale::treeture<uint64_t > var_9 = allscale::spawn_with_dependencies<__wi_allscale_wi_2_work >(allscale::runtime::after(), (IMP_Args_instance1 const&)INS_INIT(IMP_Args_instance1){(allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 >&&)var_2.getLeftChild(), (IMP_BoundingBox_7 const&)var_6}, (allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const&)hpx::util::get<1 >(var_0), (allscale::utils::Vector<float, 7 > const&)hpx::util::get<2 >(var_0), (float const&)hpx::util::get<3 >(var_0));
    allscale::treeture<uint64_t > var_10 = allscale::spawn_with_dependencies<__wi_allscale_wi_2_work >(allscale::runtime::after(), (IMP_Args_instance1 const&)INS_INIT(IMP_Args_instance1){(allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 >&&)var_2.getRightChild(), (IMP_BoundingBox_7 const&)var_7}, (allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const&)hpx::util::get<1 >(var_0), (allscale::utils::Vector<float, 7 > const&)hpx::util::get<2 >(var_0), (float const&)hpx::util::get<3 >(var_0));
    return allscale::treeture<uint64_t >(var_5 + var_9.get_result() + var_10.get_result());
}
/* ------- Function Definitions --------- */
allscale::treeture<uint64_t > allscale_fun_234(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return allscale_fun_236(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > allscale_fun_243(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const&)hpx::util::get<1 >(var_0), allscale::api::user::data::StaticBalancedBinaryTreeRegion<32>::subtree(hpx::util::get<0 >(var_0).node.getSubtreeIndex()), allscale::runtime::AccessMode::ReadOnly)};
}
struct __wi_allscale_wi_2_variant_0 {
    static allscale::treeture<uint64_t > execute(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > get_requirements(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > __wi_allscale_wi_2_variant_0::get_requirements(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return allscale_fun_243(var_0);
}
allscale::treeture<uint64_t > __wi_allscale_wi_2_variant_0::execute(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return allscale_fun_234(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_248(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return ((IMP_Args_instance1 const&)hpx::util::get<0 >(var_0)).node.isLeaf() || ((IMP_Args_instance1 const&)hpx::util::get<0 >(var_0)).node.getLevel() > (int32_t)((uint64_t)2 * 32ul / (uint64_t)3);
}
/* ------- Function Definitions --------- */
bool allscale_fun_254(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return !allscale_fun_248(var_0);
}
struct __wi_allscale_wi_2_can_split {
    static bool call(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0);
};

bool __wi_allscale_wi_2_can_split::call(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return allscale_fun_254(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > allscale_fun_253(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const&)hpx::util::get<1 >(var_0), allscale::api::user::data::StaticBalancedBinaryTreeRegion<32>::closure(hpx::util::get<0 >(var_0).node.getSubtreeIndex()), allscale::runtime::AccessMode::ReadOnly)};
}
/* ------- Function Prototypes ---------- */
uint64_t IMP__lparen_anonymous_space_namespace_rparen__colon__colon_twoPointCorrelationSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_298_2_7_32_returns_std_colon__colon_size_t(allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const& p1, allscale::utils::Vector<float, 7 > const& p2, float p3, allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > const& p4, IMP_BoundingBox_7 const& p5);

/* ------- Function Definitions --------- */
uint64_t allscale_fun_252(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return IMP__lparen_anonymous_space_namespace_rparen__colon__colon_twoPointCorrelationSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_298_2_7_32_returns_std_colon__colon_size_t((allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const&)hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0), hpx::util::get<3 >(var_0), ((IMP_Args_instance1 const&)hpx::util::get<0 >(var_0)).node, ((IMP_Args_instance1 const&)hpx::util::get<0 >(var_0)).box);
}
/* ------- Function Definitions --------- */
uint64_t allscale_fun_250(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return IMP__lparen_anonymous_space_namespace_rparen__colon__colon_twoPointCorrelationSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_298_2_7_32_returns_std_colon__colon_size_t((allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const&)hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0), hpx::util::get<3 >(var_0), ((IMP_Args_instance1 const&)hpx::util::get<0 >(var_0)).node, ((IMP_Args_instance1 const&)hpx::util::get<0 >(var_0)).box);
}
/* ------- Function Definitions --------- */
uint64_t allscale_fun_246(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    if (allscale_fun_248(var_0)) {
        return allscale_fun_250(var_0);
    } else {
        return allscale_fun_252(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::treeture<uint64_t > allscale_fun_245(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return allscale::treeture<uint64_t >(allscale_fun_246(var_0));
}
struct __wi_allscale_wi_2_variant_1 {
    static allscale::treeture<uint64_t > execute(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > get_requirements(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0);
    static constexpr bool valid = true;
};

/* ------- Function Definitions --------- */
uint64_t IMP__lparen_anonymous_space_namespace_rparen__colon__colon_twoPointCorrelationSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_298_2_7_32_returns_std_colon__colon_size_t(allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const& var_0, allscale::utils::Vector<float, 7 > const& var_1, float var_2, allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > const& var_3, IMP_BoundingBox_7 const& var_4) {
    allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > const&& var_5 = allscale::runtime::DataItemManager::get(var_0);
    if (var_4.minimumDistanceSquared_returns_distance_t(var_1) > var_2) {
        return (uint64_t)0;
    };
    allscale::utils::Vector<float, 7 > const& var_6 = var_5.operator[](var_3);
    uint64_t var_7 = (uint64_t)0;
    if (IMP_distanceSquared_7_returns_distance_t(var_1, var_6) <= var_2) {
        var_7++;
    };
    if (var_3.isLeaf()) {
        return var_7;
    };
    IMP_BoundingBox_7 var_8 = var_4;
    IMP_BoundingBox_7 var_9 = var_4;
    uint64_t var_10 = (uint64_t)var_3.getLevel() % 7ul;
    var_8.high.operator[](var_10) = var_6.operator[](var_10);
    var_9.low.operator[](var_10) = var_6.operator[](var_10);
    return var_7 + IMP__lparen_anonymous_space_namespace_rparen__colon__colon_twoPointCorrelationSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_298_2_7_32_returns_std_colon__colon_size_t(var_0, var_1, var_2, var_3.getLeftChild(), var_8) + IMP__lparen_anonymous_space_namespace_rparen__colon__colon_twoPointCorrelationSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_298_2_7_32_returns_std_colon__colon_size_t(var_0, var_1, var_2, var_3.getRightChild(), var_9);
}
allscale::treeture<uint64_t > __wi_allscale_wi_2_variant_1::execute(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return allscale_fun_245(var_0);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > __wi_allscale_wi_2_variant_1::get_requirements(hpx::util::tuple<IMP_Args_instance1, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >, allscale::utils::Vector<float, 7 >, float > const& var_0) {
    return allscale_fun_253(var_0);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_Args::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > >((*this).node);
    var_1.write<allscale::utils::Vector<float, 7 > >((*this).min);
    var_1.write<allscale::utils::Vector<float, 7 > >((*this).max);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_Args IMP_Args::load(allscale::utils::ArchiveReader& var_0) {
    allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > var_1 = var_0.read<allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > >();
    allscale::utils::Vector<float, 7 > var_2 = var_0.read<allscale::utils::Vector<float, 7 > >();
    allscale::utils::Vector<float, 7 > var_3 = var_0.read<allscale::utils::Vector<float, 7 > >();
    return {std::move(var_1), std::move(var_2), std::move(var_3)};
}
/* ------- Function Definitions --------- */
struct allscale_type_136;
typedef struct allscale_type_136 allscale_type_136;

struct allscale_type_136 {
    char data[1];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_136> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_136> { using type = std::array<char,1u>; };

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_125(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 >&& var_1 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >&)hpx::util::get<1 >(var_0));
    uint64_t var_2 = (uint64_t)((IMP_Args const&)hpx::util::get<0 >(var_0)).node.getLevel() % 7ul;
    allscale::utils::Vector<float, 7 >& var_3 = var_1.operator[](((IMP_Args const&)hpx::util::get<0 >(var_0)).node);
    var_3 = ((IMP_Args const&)hpx::util::get<0 >(var_0)).min;
    var_3.operator[](var_2) = ((IMP_Args const&)hpx::util::get<0 >(var_0)).min.operator[](var_2) + (((IMP_Args const&)hpx::util::get<0 >(var_0)).max.operator[](var_2) - ((IMP_Args const&)hpx::util::get<0 >(var_0)).min.operator[](var_2)) / (float)2;
    if ((bool)false) {
        std::cerr << "";
    };
    allscale::utils::Vector<float, 7 > var_4 = (allscale::utils::Vector<float, 7 > const&)((IMP_Args const&)hpx::util::get<0 >(var_0)).max;
    allscale::utils::Vector<float, 7 > var_5 = (allscale::utils::Vector<float, 7 > const&)((IMP_Args const&)hpx::util::get<0 >(var_0)).min;
    var_4.operator[](var_2) = var_3.operator[](var_2);
    var_5.operator[](var_2) = var_3.operator[](var_2);
    return allscale::runtime::treeture_parallel(allscale::runtime::after(), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_1_work >(allscale::runtime::after(), (IMP_Args const&)INS_INIT(IMP_Args){(allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 >&&)((IMP_Args const&)hpx::util::get<0 >(var_0)).node.getLeftChild(), (allscale::utils::Vector<float, 7 > const&)((IMP_Args const&)hpx::util::get<0 >(var_0)).min, (allscale::utils::Vector<float, 7 > const&)var_4}, (allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const&)hpx::util::get<1 >(var_0))), std::move(allscale::spawn_with_dependencies<__wi_allscale_wi_1_work >(allscale::runtime::after(), (IMP_Args const&)INS_INIT(IMP_Args){(allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 >&&)((IMP_Args const&)hpx::util::get<0 >(var_0)).node.getRightChild(), (allscale::utils::Vector<float, 7 > const&)var_5, (allscale::utils::Vector<float, 7 > const&)((IMP_Args const&)hpx::util::get<0 >(var_0)).max}, (allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > const&)hpx::util::get<1 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_123(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    return allscale_fun_125(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > allscale_fun_138(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >&)hpx::util::get<1 >(var_0), allscale::api::user::data::StaticBalancedBinaryTreeRegion<32>::subtree(hpx::util::get<0 >(var_0).node.getSubtreeIndex()), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_1_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > get_requirements(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > __wi_allscale_wi_1_variant_0::get_requirements(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    return allscale_fun_138(var_0);
}
allscale::treeture<void > __wi_allscale_wi_1_variant_0::execute(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    return allscale_fun_123(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_144(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    return ((IMP_Args const&)hpx::util::get<0 >(var_0)).node.isLeaf();
}
/* ------- Function Definitions --------- */
bool allscale_fun_151(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    return !allscale_fun_144(var_0);
}
struct __wi_allscale_wi_1_can_split {
    static bool call(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0);
};

bool __wi_allscale_wi_1_can_split::call(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    return allscale_fun_151(var_0);
}
/* ------- Function Prototypes ---------- */
void IMP__lparen_anonymous_space_namespace_rparen__colon__colon_fillSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_100_2_7_32_returns_void(allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >& p1, allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > const& p2, allscale::utils::Vector<float, 7 > const& p3, allscale::utils::Vector<float, 7 > const& p4);

/* ------- Function Definitions --------- */
void allscale_fun_147(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    IMP__lparen_anonymous_space_namespace_rparen__colon__colon_fillSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_100_2_7_32_returns_void((allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >&)hpx::util::get<1 >(var_0), ((IMP_Args const&)hpx::util::get<0 >(var_0)).node, ((IMP_Args const&)hpx::util::get<0 >(var_0)).min, ((IMP_Args const&)hpx::util::get<0 >(var_0)).max);
}
/* ------- Function Definitions --------- */
void allscale_fun_149(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    IMP__lparen_anonymous_space_namespace_rparen__colon__colon_fillSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_100_2_7_32_returns_void((allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >&)hpx::util::get<1 >(var_0), ((IMP_Args const&)hpx::util::get<0 >(var_0)).node, ((IMP_Args const&)hpx::util::get<0 >(var_0)).min, ((IMP_Args const&)hpx::util::get<0 >(var_0)).max);
    return (void)0;
}
/* ------- Function Definitions --------- */
void rec(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    if (allscale_fun_144(var_0)) {
        return allscale_fun_147(var_0);
    } else {
        return allscale_fun_149(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_141(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    rec(var_0);
    return {};
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > allscale_fun_150(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >&)hpx::util::get<1 >(var_0), allscale::api::user::data::StaticBalancedBinaryTreeRegion<32>::closure(hpx::util::get<0 >(var_0).node.getSubtreeIndex()), allscale::runtime::AccessMode::ReadWrite)};
}
struct __wi_allscale_wi_1_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > get_requirements(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0);
    static constexpr bool valid = true;
};

/* ------- Function Definitions --------- */
void IMP__lparen_anonymous_space_namespace_rparen__colon__colon_fillSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_100_2_7_32_returns_void(allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > >& var_0, allscale::api::user::data::StaticBalancedBinaryTreeElementAddress<32 > const& addr, allscale::utils::Vector<float, 7 > const& var_2, allscale::utils::Vector<float, 7 > const& var_3) {
    allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 >&& var_4 = allscale::runtime::DataItemManager::get(var_0);
    uint64_t var_5 = (uint64_t)addr.getLevel() % 7ul;
    allscale::utils::Vector<float, 7 >& var_6 = var_4.operator[](addr);
    var_6 = var_2;
    var_6.operator[](var_5) = var_2.operator[](var_5) + (var_3.operator[](var_5) - var_2.operator[](var_5)) / (float)2;
    if (addr.isLeaf()) {
        return;
    };
    allscale::utils::Vector<float, 7 > var_7 = var_3;
    allscale::utils::Vector<float, 7 > var_8 = var_2;
    var_7.operator[](var_5) = var_6.operator[](var_5);
    var_8.operator[](var_5) = var_6.operator[](var_5);
    IMP__lparen_anonymous_space_namespace_rparen__colon__colon_fillSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_100_2_7_32_returns_void(var_0, addr.getLeftChild(), var_2, var_7);
    IMP__lparen_anonymous_space_namespace_rparen__colon__colon_fillSequential_slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_two_point_correlation_dot_h_100_2_7_32_returns_void(var_0, addr.getRightChild(), var_8, var_3);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > __wi_allscale_wi_1_variant_1::get_requirements(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    return allscale_fun_150(var_0);
}
allscale::runtime::unused_type __wi_allscale_wi_1_variant_1::execute(hpx::util::tuple<IMP_Args, allscale::runtime::DataItemReference<allscale::api::user::data::StaticBalancedBinaryTree<allscale::utils::Vector<float, 7 >, 32 > > > const& var_0) {
    return allscale_fun_141(var_0);
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13 IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > > IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13::operator()() const {
    return (std::chrono::time_point<std::chrono::system_clock, std::chrono::duration<int64_t, std::ratio<1, 1000000000 > > >&&)std::chrono::system_clock::now();
}
/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13_struct_space_std_colon__colon_chrono_colon__colon_time_point_lt_struct_space_std_colon__colon_chrono_colon__colon__V2_colon__colon_system_clock_comma__space_struct_space_std_colon__colon_chrono_colon__colon_duration_lt_long_comma__space_struct_space_std_colon__colon_ratio_lt_1_comma__space_1000000000_gt__space__gt__space__gt__IMLOC__slash_home_slash_herbert_slash_coding_slash_c_plus__plus__slash_allscale_compiler_slash_test_slash_data_requirements_slash_binary_tree_slash_two_point_correlation_slash_latency_slash_latency_dot_cpp_22_13::operator allscale_type_21() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
allscale::treeture<int32_t > __wi_main_variant_1::execute(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_3(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_261(hpx::util::tuple<int32_t, char** > const& var_0) {
    return (bool)false;
}
struct __wi_main_can_split {
    static bool call(hpx::util::tuple<int32_t, char** > const& var_0);
};

bool __wi_main_can_split::call(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_261(var_0);
}
struct __wi_main_variant_0 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple<int32_t, char** > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<int32_t > __wi_main_variant_0::execute(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_3(var_0);
}

