/**
 * ------------------------ Auto-generated Code ------------------------
 *           This code was generated by the Insieme Compiler
 * ---------------------------------------------------------------------
 */
#include <alloca.h>
#include <allscale/runtime.hpp>
#include <assert.h>
#include <stdbool.h>
#include <stdint.h>
#include <utility>

#ifdef __cplusplus
#define INS_INIT(...) __VA_ARGS__
#else
#define INS_INIT(...) (__VA_ARGS__)
#endif
#ifdef __cplusplus
#include <new>
#define INS_INPLACE_INIT(Loc,Type) new(Loc) Type
#else
#define INS_INPLACE_INIT(Loc,Type) *(Loc) = (Type)
#endif
#ifdef __cplusplus
				/** Workaround for libstdc++/libc bug.
				 *  There's an inconsistency between libstdc++ and libc regarding whether
				 *  ::gets is declared or not, which is only evident when using certain
				 *  compilers and language settings
				 *  (tested positively with clang 3.9 --std=c++14 and libc 2.17).
				 */
				#include <initializer_list>  // force libstdc++ to include its config
				#undef _GLIBCXX_HAVE_GETS    // correct broken config
#endif

/* ------- Program Code --------- */

struct __wi_main_variant_0;
typedef struct __wi_main_variant_0 __wi_main_variant_0;

struct __wi_main_name {
    static const char* name() { return "__wi_main"; }
};

struct __wi_main_variant_1;
typedef struct __wi_main_variant_1 __wi_main_variant_1;

using __wi_main_work = allscale::work_item_description<int32_t, __wi_main_name, allscale::no_serialization, __wi_main_variant_0, __wi_main_variant_1 >;

/* ------- Function Definitions --------- */
int32_t main() {
    return allscale::runtime::main_wrapper<__wi_main_work >();
}

ALLSCALE_REGISTER_TREETURE_TYPE(int32_t)
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency {
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency {
    ;
    ;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies split() const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int;

struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15;
typedef struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int {
    int32_t _begin;
    int32_t _end;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(int32_t const& p2, int32_t const& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int() = default;
    bool IMP_empty_returns_bool() const;
    uint64_t IMP_size_returns_size_t() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int&& p2) = default;
    int32_t const& begin_returns_const_int_() const;
    bool covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2) const;
    int32_t const& end_returns_const_int_() const;
    void forEach_lambdahomezangerlinsieme_devallscaletestpforempty_loopempty_loopcpp_8_15_returns_void(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 const& p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int grow_returns_allscaleapiuserdetailrangeint(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2, int32_t p3) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int shrink_returns_allscaleapiuserdetailrangeint(int32_t p2) const;
    struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int > split_returns_stdpairrangeint_rangeint_() const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int _range;
    allscale::treeture<void > handle;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2, allscale::treeture<void > const& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int() = default;
    operator allscale::treeture<void >() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int&& p2) = default;
    allscale::treeture<void > const& getHandle_returns_const_coretask_reference_() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int getLeft_returns_iteration_referenceint() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& getRange_returns_const_rangeint_() const;
    void wait_returns_void() const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2, allscale::treeture<void >&& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int const& p2);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int&& p2) = default;
};

typedef void allscale_type_12(int32_t);

typedef allscale_type_12* allscale_type_13;

struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 {
    operator allscale_type_13() const;
    ;
    ;
    void operator()(int32_t p2) const;
};

struct __wi_allscale_wi_0_name {
    static const char* name() { return "__wi_allscale_wi_0"; }
};

struct __wi_allscale_wi_0_variant_0;
typedef struct __wi_allscale_wi_0_variant_0 __wi_allscale_wi_0_variant_0;

struct __wi_allscale_wi_0_variant_1;
typedef struct __wi_allscale_wi_0_variant_1 __wi_allscale_wi_0_variant_1;

using __wi_allscale_wi_0_work = allscale::work_item_description<void, __wi_allscale_wi_0_name, allscale::no_serialization, __wi_allscale_wi_0_variant_0, __wi_allscale_wi_0_variant_1 >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_151(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_1) {
    return allscale::spawn<__wi_allscale_wi_0_work >(hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1), hpx::util::get<2 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int allscale_fun_149(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_0, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, void >(INS_INIT(hpx::util::tuple<IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 >){var_1, var_1}, &allscale_fun_151)(var_0)};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies_returns_detail_colon__colon_loop_reference_lt_int_gt_(int32_t const& var_0, int32_t const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 const& var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies const& var_3) {
    return allscale_fun_149(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(var_0, var_1), var_2, var_3);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_returns_detail_colon__colon_loop_reference_lt_int_gt_(int32_t const& var_0, int32_t const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 const& var_2) {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies_returns_detail_colon__colon_loop_reference_lt_int_gt_(var_0, var_1, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies());
}
/* ------- Function Definitions --------- */
int32_t IMP_main() {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_returns_detail_colon__colon_loop_reference_lt_int_gt_(0, 10, INS_INIT(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15){});
    return 0;
}
/* ------- Function Definitions --------- */
allscale::treeture<int32_t > allscale_fun_2(hpx::util::tuple<int, char** > const& var_0) {
    return allscale::treeture<int32_t >(IMP_main());
}
struct __wi_main_variant_0 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple<int, char** > const& var_0);
    static constexpr bool valid = true;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies left;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies right;;
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies::split() const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15::operator()(int32_t var_1) const { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15::operator allscale_type_13() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(int32_t const& var_1, int32_t const& var_2) : _begin(var_1), _end(var_2) {
    if ((*this).IMP_empty_returns_bool()) {
        (*this)._end = (*this)._begin;
    };
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::IMP_empty_returns_bool() const {
    return (*this).IMP_size_returns_size_t() == (uint64_t)0;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_spliter_lt_int_gt__colon__colon_split_returns_std_colon__colon_pair_lt_rng_comma__rng_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_0) {
    int32_t const& var_1 = var_0.begin_returns_const_int_();
    int32_t const& var_2 = var_0.end_returns_const_int_();
    int32_t var_3 = var_1 + (var_2 - var_1) / 2;
    return std::make_pair(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(var_1, var_3), IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(var_3, var_2));
}
/* ------- Function Definitions --------- */
struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::split_returns_stdpairrangeint_rangeint_() const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_spliter_lt_int_gt__colon__colon_split_returns_std_colon__colon_pair_lt_rng_comma__rng_gt_(*this);
}
/* ------- Function Definitions --------- */
int32_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_access_int_returns_typename_std_colon__colon_enable_if_lt_std_colon__colon_is_integral_lt_int_gt__colon__colon_value_comma__int_gt__colon__colon_type(int32_t var_0) {
    return var_0;
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_forEach_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_returns_void(int32_t const& var_0, int32_t const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 const& var_2) {
    for (int32_t var_3 = var_0; var_3 < var_1; ++var_3) {
        var_2.operator()(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_access_int_returns_typename_std_colon__colon_enable_if_lt_std_colon__colon_is_integral_lt_int_gt__colon__colon_value_comma__int_gt__colon__colon_type(var_3));
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::forEach_lambdahomezangerlinsieme_devallscaletestpforempty_loopempty_loopcpp_8_15_returns_void(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_forEach_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
int32_t const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::begin_returns_const_int_() const {
    return (*this)._begin;
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int {
    ;
    ;
    uint64_t operator()(int32_t p2, int32_t p3) const;
};

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::IMP_size_returns_size_t() const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int().operator()((*this)._begin, (*this)._end);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int::operator()(int32_t var_1, int32_t var_2) const {
    return (uint64_t)(var_1 < var_2?var_2 - var_1:0);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
int32_t const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::end_returns_const_int_() const {
    return (*this)._end;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::grow_returns_allscaleapiuserdetailrangeint(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_1, int32_t var_2) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::shrink_returns_allscaleapiuserdetailrangeint(int32_t var_1) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_1) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::operator allscale::treeture<void >() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_1, allscale::treeture<void > const& var_2) : _range(var_1), handle(var_2) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::getRange_returns_const_rangeint_() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
allscale::treeture<void > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::getHandle_returns_const_coretask_reference_() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::getLeft_returns_iteration_referenceint() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::wait_returns_void() const {
    (*this).handle.wait();
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int::operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int const& var_1) {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int::~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int() {
    (*(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int*)this).wait_returns_void();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_1, allscale::treeture<void >&& var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int(var_1, std::move(var_2)) { }
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_160(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0) {
    struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int > var_1 = hpx::util::get<0 >(var_0).split_returns_stdpairrangeint_rangeint_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int& var_2 = var_1.first;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int& var_3 = var_1.second;
    return allscale::runtime::treeture_parallel(std::move((allscale::spawn<__wi_allscale_wi_0_work >)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const&)var_2, hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0))), std::move((allscale::spawn<__wi_allscale_wi_0_work >)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const&)var_3, hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0))));
}
/* ------- Function Definitions --------- */
void allscale_fun_157(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0) {
    hpx::util::get<0 >(var_0).forEach_lambdahomezangerlinsieme_devallscaletestpforempty_loopempty_loopcpp_8_15_returns_void(*(const IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15*)(&hpx::util::get<1 >(var_0)));
}
/* ------- Function Definitions --------- */
bool allscale_fun_155(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0) {
    return hpx::util::get<0 >(var_0).IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_153(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0) {
    if (allscale_fun_155(var_0)) {
        return allscale_fun_157(var_0),allscale::make_ready_treeture();
    } else {
        return allscale_fun_160(var_0);
    };
}
struct __wi_allscale_wi_0_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_0_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0) {
    return allscale_fun_153(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_164(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0) {
    hpx::util::get<0 >(var_0).forEach_lambdahomezangerlinsieme_devallscaletestpforempty_loopempty_loopcpp_8_15_returns_void(*(const IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15*)(&hpx::util::get<2 >(var_0)));
    return (void)0;
}
/* ------- Function Definitions --------- */
void rec(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0) {
    if (allscale_fun_155(var_0)) {
        return allscale_fun_157(var_0);
    } else {
        return allscale_fun_164(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_163(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0) {
    return rec(var_0),allscale::make_ready_treeture();
}
struct __wi_allscale_wi_0_variant_1 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_0_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15_void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_empty_loop_slash_empty_loop_dot_cpp_8_15 > const& var_0) {
    return allscale_fun_163(var_0);
}
allscale::treeture<int32_t > __wi_main_variant_0::execute(hpx::util::tuple<int, char** > const& var_0) {
    return allscale_fun_2(var_0);
}
struct __wi_main_variant_1 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple<int, char** > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<int32_t > __wi_main_variant_1::execute(hpx::util::tuple<int, char** > const& var_0) {
    return allscale_fun_2(var_0);
}

