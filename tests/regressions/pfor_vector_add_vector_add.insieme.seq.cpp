/**
 * ------------------------ Auto-generated Code ------------------------
 *           This code was generated by the Insieme Compiler
 * ---------------------------------------------------------------------
 */
#include <algorithm>
#include <alloca.h>
#include <allscale/runtime.hpp>
#include <assert.h>
#include <iostream>
#include <stdbool.h>
#include <stdint.h>
#include <utility>

#ifdef __cplusplus
#define INS_INIT(...) __VA_ARGS__
#else
#define INS_INIT(...) (__VA_ARGS__)
#endif
#ifdef __cplusplus
#include <new>
#define INS_INPLACE_INIT(Loc,Type) new(Loc) Type
#else
#define INS_INPLACE_INIT(Loc,Type) *(Loc) = (Type)
#endif
#ifdef __cplusplus
				/** Workaround for libstdc++/libc bug.
				 *  There's an inconsistency between libstdc++ and libc regarding whether
				 *  ::gets is declared or not, which is only evident when using certain
				 *  compilers and language settings
				 *  (tested positively with clang 3.9 --std=c++14 and libc 2.17).
				 */
				#include <initializer_list>  // force libstdc++ to include its config
				#undef _GLIBCXX_HAVE_GETS    // correct broken config
#endif

/* ------- Program Code --------- */

struct __wi_main_variant_0;
typedef struct __wi_main_variant_0 __wi_main_variant_0;

struct __wi_main_variant_1;
typedef struct __wi_main_variant_1 __wi_main_variant_1;

struct __wi_main_name {
    static const char* name() { return "__wi_main"; }
};

using __wi_main_work = allscale::work_item_description<int32_t, __wi_main_name, allscale::no_serialization, __wi_main_variant_0, __wi_main_variant_1 >;

/* ------- Function Definitions --------- */
int32_t main() {
    return allscale::runtime::main_wrapper<__wi_main_work >();
}

struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12;
typedef struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12;

typedef void allscale_type_19(int32_t&);

typedef allscale_type_19* allscale_type_20;

struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 {
    operator allscale_type_20() const;
    ;
    ;
    void operator()(int32_t& p2) const;
};

struct __wi_allscale_wi_2_variant_1;
typedef struct __wi_allscale_wi_2_variant_1 __wi_allscale_wi_2_variant_1;

struct __wi_allscale_wi_2_name {
    static const char* name() { return "__wi_allscale_wi_2"; }
};

struct __wi_allscale_wi_2_variant_0;
typedef struct __wi_allscale_wi_2_variant_0 __wi_allscale_wi_2_variant_0;

using __wi_allscale_wi_2_work = allscale::work_item_description<void, __wi_allscale_wi_2_name, allscale::no_serialization, __wi_allscale_wi_2_variant_0, __wi_allscale_wi_2_variant_1 >;

struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14;
typedef struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int;

struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 {
    std::vector<int32_t, std::allocator<int32_t > >& capture_0;
    std::vector<int32_t, std::allocator<int32_t > >& capture_1;
    std::vector<int32_t, std::allocator<int32_t > >& capture_2;;
    IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 const& p2) = default;
    IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14&& p2) = default;
    IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14(std::vector<int32_t, std::allocator<int32_t > >& p2, std::vector<int32_t, std::allocator<int32_t > >& p3, std::vector<int32_t, std::allocator<int32_t > >& p4);
    ~IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14() = default;
    IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14& operator=(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 const& p2) = default;
    IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14& operator=(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14&& p2) = default;
    void operator()(int32_t p2) const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int {
    int32_t _begin;
    int32_t _end;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(int32_t const& p2, int32_t const& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int() = default;
    bool allscale_fun_261() const;
    uint64_t allscale_fun_265() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int&& p2) = default;
    int32_t const& begin_returns_const_int_() const;
    bool covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2) const;
    int32_t const& end_returns_const_int_() const;
    void forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_23_14_returns_void(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 const& p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int grow_returns_allscaleapiuserdetailrangeint(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2, int32_t p3) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int shrink_returns_allscaleapiuserdetailrangeint(int32_t p2) const;
    struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int > split_returns_stdpairrangeint_rangeint_() const;
};

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_355(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_1) {
    return allscale::spawn<__wi_allscale_wi_2_work >(hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1), hpx::util::get<2 >(var_1));
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int _range;
    allscale::treeture<void > handle;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2, allscale::treeture<void > const& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int() = default;
    operator allscale::treeture<void >() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int&& p2) = default;
    allscale::treeture<void > const& getHandle_returns_const_coretask_reference_() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int getLeft_returns_iteration_referenceint() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& getRange_returns_const_rangeint_() const;
    void wait_returns_void() const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& p2, allscale::treeture<void >&& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int const& p2);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int&& p2) = default;
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int allscale_fun_353(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_0, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, void >(INS_INIT(hpx::util::tuple<IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 >){var_1, var_1}, &allscale_fun_355)(var_0)};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies_returns_detail_colon__colon_loop_reference_lt_int_gt_(int32_t const& var_0, int32_t const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 const& var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies const& var_3) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int&&)allscale_fun_353(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(var_0, var_1), var_2, var_3);
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency {
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency {
    ;
    ;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies split() const;
};

/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_returns_detail_colon__colon_loop_reference_lt_int_gt_(int32_t const& var_0, int32_t const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies_returns_detail_colon__colon_loop_reference_lt_int_gt_(var_0, var_1, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies());
}
struct allscale_type_374;
typedef struct allscale_type_374 allscale_type_374;

struct allscale_type_374 {
    char data[2];;
};

struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12;
typedef struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12;

struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 {
    operator allscale_type_20() const;
    ;
    ;
    void operator()(int32_t& p2) const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ {
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > _begin;
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > _end;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& p2, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_() = default;
    bool IMP_empty_returns_bool() const;
    uint64_t IMP_size_returns_size_t() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& begin_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const;
    bool covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2) const;
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& end_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const;
    void forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_12_12_returns_void(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 const& p2) const;
    void forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_17_12_returns_void(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 const& p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ grow_returns_allscaleapiuserdetailrange__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2, int32_t p3) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ shrink_returns_allscaleapiuserdetailrange__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___(int32_t p2) const;
    struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ > split_returns_stdpairrange__normal_iteratorint__vectorint_allocatorint____range__normal_iteratorint__vectorint_allocatorint____() const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ _range;
    allscale::treeture<void > handle;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2, allscale::treeture<void > const& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_() = default;
    operator allscale::treeture<void >() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
    allscale::treeture<void > const& getHandle_returns_const_coretask_reference_() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ getLeft_returns_iteration_reference__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& getRange_returns_const_range__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint____() const;
    void wait_returns_void() const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2, allscale::treeture<void >&& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
};

struct __wi_allscale_wi_0_variant_0;
typedef struct __wi_allscale_wi_0_variant_0 __wi_allscale_wi_0_variant_0;

struct __wi_allscale_wi_0_name {
    static const char* name() { return "__wi_allscale_wi_0"; }
};

struct __wi_allscale_wi_0_variant_1;
typedef struct __wi_allscale_wi_0_variant_1 __wi_allscale_wi_0_variant_1;

using __wi_allscale_wi_0_work = allscale::work_item_description<void, __wi_allscale_wi_0_name, allscale::no_serialization, __wi_allscale_wi_0_variant_0, __wi_allscale_wi_0_variant_1 >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_192(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_1) {
    return allscale::spawn<__wi_allscale_wi_0_work >(hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1), hpx::util::get<2 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ allscale_fun_190(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_0, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, void >(INS_INIT(hpx::util::tuple<IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 >){var_1, var_1}, &allscale_fun_192)(var_0)};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 const& var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies const& var_3) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&&)allscale_fun_190(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(var_0, var_1), var_2, var_3);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(var_0, var_1, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies());
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_returns_detail_colon__colon_loop_reference_lt_typename_vector_lt_int_comma__allocator_lt_int_gt___gt__colon__colon_iterator_gt_(std::vector<int32_t, std::allocator<int32_t > >& var_0, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(var_0.begin(), var_0.end(), var_1);
}
struct __wi_allscale_wi_1_name {
    static const char* name() { return "__wi_allscale_wi_1"; }
};

struct __wi_allscale_wi_1_variant_1;
typedef struct __wi_allscale_wi_1_variant_1 __wi_allscale_wi_1_variant_1;

struct __wi_allscale_wi_1_variant_0;
typedef struct __wi_allscale_wi_1_variant_0 __wi_allscale_wi_1_variant_0;

using __wi_allscale_wi_1_work = allscale::work_item_description<void, __wi_allscale_wi_1_name, allscale::no_serialization, __wi_allscale_wi_1_variant_0, __wi_allscale_wi_1_variant_1 >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_213(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_1) {
    return allscale::spawn<__wi_allscale_wi_1_work >(hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1), hpx::util::get<2 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ allscale_fun_211(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_0, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, void >(INS_INIT(hpx::util::tuple<IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 >){var_1, var_1}, &allscale_fun_213)(var_0)};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 const& var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies const& var_3) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&&)allscale_fun_211(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(var_0, var_1), var_2, var_3);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(var_0, var_1, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies());
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_returns_detail_colon__colon_loop_reference_lt_typename_vector_lt_int_comma__allocator_lt_int_gt___gt__colon__colon_iterator_gt_(std::vector<int32_t, std::allocator<int32_t > >& var_0, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(var_0.begin(), var_0.end(), var_1);
}
/* ------- Function Definitions --------- */
int32_t IMP_main() {
    const int32_t var_0 = 100;
    std::vector<int32_t, std::allocator<int32_t > > var_1(((uint64_t)var_0), (std::allocator<int32_t >()));
    std::vector<int32_t, std::allocator<int32_t > > var_2(((uint64_t)var_0), (std::allocator<int32_t >()));
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_returns_detail_colon__colon_loop_reference_lt_typename_vector_lt_int_comma__allocator_lt_int_gt___gt__colon__colon_iterator_gt_(var_1, INS_INIT(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12){});
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_returns_detail_colon__colon_loop_reference_lt_typename_vector_lt_int_comma__allocator_lt_int_gt___gt__colon__colon_iterator_gt_(var_2, INS_INIT(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12){});
    std::vector<int32_t, std::allocator<int32_t > > var_3(((uint64_t)var_0), (std::allocator<int32_t >()));
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_returns_detail_colon__colon_loop_reference_lt_int_gt_(0, var_0, INS_INIT(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14){var_3, var_1, var_2});
    std::vector<int32_t, std::allocator<int32_t > >& var_4 = var_3;
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > var_5 = (__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > >&&)var_4.begin();
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > var_6 = (__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > >&&)var_4.end();
    while (__gnu_cxx::operator!=(var_5, var_6)) {
        int32_t const& var_7 = var_5.operator*();
        {
            std::operator<<(std::cout.operator<<(var_7), "\n");
            var_5.operator++();
        };
    };
    return 0;
}
ALLSCALE_REGISTER_TREETURE_TYPE(int32_t)
/* ------- Function Definitions --------- */
allscale::treeture<int32_t > allscale_fun_4(hpx::util::tuple< > const& var_0) {
    return allscale::treeture<int32_t >(IMP_main());
}
struct __wi_main_variant_0 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple< > const& var_0);
    static constexpr bool valid = true;
};

/* ------- Function Definitions --------- */
IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12::operator allscale_type_20() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12::operator()(int32_t& var_1) const {
    var_1 = 1;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool allscale_fun_359(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0) {
    return hpx::util::get<0 >(var_0).allscale_fun_265() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
void allscale_fun_369(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0) {
    hpx::util::get<0 >(var_0).forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_23_14_returns_void(*(const IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14*)(&hpx::util::get<2 >(var_0)));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_361(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0) {
    hpx::util::get<0 >(var_0).forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_23_14_returns_void(*(const IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14*)(&hpx::util::get<1 >(var_0)));
}
/* ------- Function Definitions --------- */
void allscale_fun_368(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0) {
    if (allscale_fun_359(var_0)) {
        return allscale_fun_361(var_0);
    } else {
        return allscale_fun_369(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_367(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0) {
    return allscale_fun_368(var_0),allscale::make_ready_treeture();
}
struct __wi_allscale_wi_2_variant_1 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0);
    static constexpr bool valid = true;
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14::IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14(std::vector<int32_t, std::allocator<int32_t > >& var_1, std::vector<int32_t, std::allocator<int32_t > >& var_2, std::vector<int32_t, std::allocator<int32_t > >& var_3) : capture_0(var_1), capture_1(var_2), capture_2(var_3) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14::operator()(int32_t var_1) const {
    (*this).capture_0.operator[]((uint64_t)var_1) = (*this).capture_1.operator[]((uint64_t)var_1) + (*this).capture_2.operator[]((uint64_t)var_1);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::shrink_returns_allscaleapiuserdetailrangeint(int32_t var_1) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_1) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
int32_t const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::end_returns_const_int_() const {
    return (*this)._end;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::grow_returns_allscaleapiuserdetailrangeint(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_1, int32_t var_2) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_spliter_lt_int_gt__colon__colon_split_returns_std_colon__colon_pair_lt_rng_comma__rng_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_0) {
    int32_t const& var_1 = var_0.begin_returns_const_int_();
    int32_t const& var_2 = var_0.end_returns_const_int_();
    int32_t var_3 = var_1 + (var_2 - var_1) / 2;
    return (struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int >&&)std::make_pair(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(var_1, var_3), IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(var_3, var_2));
}
/* ------- Function Definitions --------- */
struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::split_returns_stdpairrangeint_rangeint_() const {
    return (struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int >&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_spliter_lt_int_gt__colon__colon_split_returns_std_colon__colon_pair_lt_rng_comma__rng_gt_(*this);
}
/* ------- Function Definitions --------- */
int32_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_access_int_returns_typename_std_colon__colon_enable_if_lt_std_colon__colon_is_integral_lt_int_gt__colon__colon_value_comma__int_gt__colon__colon_type(int32_t var_0) {
    return var_0;
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_forEach_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_returns_void(int32_t const& var_0, int32_t const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 const& var_2) {
    for (int32_t var_3 = var_0; var_3 < var_1; ++var_3) {
        var_2.operator()(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_access_int_returns_typename_std_colon__colon_enable_if_lt_std_colon__colon_is_integral_lt_int_gt__colon__colon_value_comma__int_gt__colon__colon_type(var_3));
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_23_14_returns_void(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_forEach_int_lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
int32_t const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::begin_returns_const_int_() const {
    return (*this)._begin;
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::allscale_fun_261() const {
    return (*this).allscale_fun_265() == (uint64_t)0;
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int {
    ;
    ;
    uint64_t operator()(int32_t p2, int32_t p3) const;
};

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::allscale_fun_265() const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int().operator()((*this)._begin, (*this)._end);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume_int::operator()(int32_t var_1, int32_t var_2) const {
    return (uint64_t)(var_1 < var_2?var_2 - var_1:0);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int(int32_t const& var_1, int32_t const& var_2) : _begin(var_1), _end(var_2) {
    if ((*this).allscale_fun_261()) {
        (*this)._end = (*this)._begin;
    };
}
allscale::treeture<void > __wi_allscale_wi_2_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0) {
    return allscale_fun_367(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_364(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0) {
    struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int > var_1 = (struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int >&&)hpx::util::get<0 >(var_0).split_returns_stdpairrangeint_rangeint_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int& var_2 = var_1.first;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int& var_3 = var_1.second;
    return allscale::runtime::treeture_parallel(std::move((allscale::spawn<__wi_allscale_wi_2_work >)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const&)var_2, hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0))), std::move((allscale::spawn<__wi_allscale_wi_2_work >)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const&)var_3, hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_357(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0) {
    if (allscale_fun_359(var_0)) {
        return allscale_fun_361(var_0),allscale::make_ready_treeture();
    } else {
        return allscale_fun_364(var_0);
    };
}
struct __wi_allscale_wi_2_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_2_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___ampersand__void_int_IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_23_14 > const& var_0) {
    return allscale_fun_357(var_0);
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies left;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies right;;
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies::split() const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_1, allscale::treeture<void > const& var_2) : _range(var_1), handle(var_2) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::operator allscale::treeture<void >() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::getLeft_returns_iteration_referenceint() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
allscale::treeture<void > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::getHandle_returns_const_coretask_reference_() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::getRange_returns_const_rangeint_() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int::wait_returns_void() const {
    (*this).handle.wait();
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int::operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int const& var_1) {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int::~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int() {
    (*(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int*)this).wait_returns_void();
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference_int(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_int const& var_1, allscale::treeture<void >&& var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference_int(var_1, std::move(var_2)) { }
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12::operator()(int32_t& var_1) const {
    var_1 = 1;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12::operator allscale_type_20() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::begin_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const {
    return (*this)._begin;
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_1) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
int32_t& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_access___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__returns_decltype_lparen__star__iter_rparen_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0) {
    return var_0.operator*();
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_forEach___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_returns_void(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 const& var_2) {
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > var_3 = var_0;
    while (__gnu_cxx::operator!=(var_3, var_1)) {
        var_2.operator()(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_access___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__returns_decltype_lparen__star__iter_rparen_(var_3));
        var_3.operator++();
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_17_12_returns_void(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_forEach___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::grow_returns_allscaleapiuserdetailrange__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_1, int32_t var_2) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_spliter_lt___gnu_cxx_colon__colon___normal_iterator_lt_int_space__star__comma__space_std_colon__colon_vector_lt_int_comma__space_std_colon__colon_allocator_lt_int_gt__space__gt__space__gt__space__gt__colon__colon_split_returns_std_colon__colon_pair_lt_rng_comma__rng_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_0) {
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1 = var_0.begin_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___();
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_2 = var_0.end_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___();
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > var_3 = (__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > >&&)var_1.operator+(__gnu_cxx::operator-(var_2, var_1) / (int64_t)2);
    return (struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ >&&)std::make_pair(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(var_1, var_3), IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(var_3, var_2));
}
/* ------- Function Definitions --------- */
struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::split_returns_stdpairrange__normal_iteratorint__vectorint_allocatorint____range__normal_iteratorint__vectorint_allocatorint____() const {
    return (struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ >&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_spliter_lt___gnu_cxx_colon__colon___normal_iterator_lt_int_space__star__comma__space_std_colon__colon_vector_lt_int_comma__space_std_colon__colon_allocator_lt_int_gt__space__gt__space__gt__space__gt__colon__colon_split_returns_std_colon__colon_pair_lt_rng_comma__rng_gt_(*this);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::shrink_returns_allscaleapiuserdetailrange__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___(int32_t var_1) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::end_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const {
    return (*this)._end;
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_forEach___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_returns_void(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 const& var_2) {
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > var_3 = var_0;
    while (__gnu_cxx::operator!=(var_3, var_1)) {
        var_2.operator()(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_access___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__returns_decltype_lparen__star__iter_rparen_(var_3));
        var_3.operator++();
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_12_12_returns_void(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_forEach___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_2) : _begin(var_1), _end(var_2) {
    if ((*this).IMP_empty_returns_bool()) {
        (*this)._end.operator=((*this)._begin);
    };
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::IMP_empty_returns_bool() const {
    return (*this).IMP_size_returns_size_t() == (uint64_t)0;
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool {
    ;
    ;
    uint64_t operator()(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& p2, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& p3) const;
};

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::IMP_size_returns_size_t() const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool().operator()((*this)._begin, (*this)._end);
}
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool::operator()(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_2) const {
    return (uint64_t)std::distance(var_1, var_2);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
allscale::treeture<void > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::getHandle_returns_const_coretask_reference_() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::getLeft_returns_iteration_reference__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::getRange_returns_const_range__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint____() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::wait_returns_void() const {
    (*this).handle.wait();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_1, allscale::treeture<void > const& var_2) : _range(var_1), handle(var_2) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::operator allscale::treeture<void >() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_1) {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_() {
    (*(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_*)this).wait_returns_void();
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_1, allscale::treeture<void >&& var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(var_1, std::move(var_2)) { }
/* ------- Function Definitions --------- */
bool allscale_fun_196(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0) {
    return hpx::util::get<0 >(var_0).IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
void allscale_fun_198(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0) {
    hpx::util::get<0 >(var_0).forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_12_12_returns_void(*(const IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12*)(&hpx::util::get<1 >(var_0)));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_201(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0) {
    struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ > var_1 = (struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ >&&)hpx::util::get<0 >(var_0).split_returns_stdpairrange__normal_iteratorint__vectorint_allocatorint____range__normal_iteratorint__vectorint_allocatorint____();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& var_2 = var_1.first;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& var_3 = var_1.second;
    return allscale::runtime::treeture_parallel(std::move((allscale::spawn<__wi_allscale_wi_0_work >)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const&)var_2, hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0))), std::move((allscale::spawn<__wi_allscale_wi_0_work >)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const&)var_3, hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_194(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0) {
    if (allscale_fun_196(var_0)) {
        return allscale_fun_198(var_0),allscale::make_ready_treeture();
    } else {
        return allscale_fun_201(var_0);
    };
}
struct __wi_allscale_wi_0_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_0_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0) {
    return allscale_fun_194(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_205(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0) {
    hpx::util::get<0 >(var_0).forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_12_12_returns_void(*(const IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12*)(&hpx::util::get<2 >(var_0)));
    return (void)0;
}
/* ------- Function Definitions --------- */
void rec(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0) {
    if (allscale_fun_196(var_0)) {
        return allscale_fun_198(var_0);
    } else {
        return allscale_fun_205(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_204(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0) {
    return rec(var_0),allscale::make_ready_treeture();
}
struct __wi_allscale_wi_0_variant_1 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_0_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_12_12 > const& var_0) {
    return allscale_fun_204(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_217(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0) {
    return hpx::util::get<0 >(var_0).IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
void allscale_fun_219(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0) {
    hpx::util::get<0 >(var_0).forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_17_12_returns_void(*(const IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12*)(&hpx::util::get<1 >(var_0)));
}
/* ------- Function Definitions --------- */
void allscale_fun_226(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0) {
    hpx::util::get<0 >(var_0).forEach_lambdahomezangerlinsieme_devallscaletestpforvector_addvector_addcpp_17_12_returns_void(*(const IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12*)(&hpx::util::get<2 >(var_0)));
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_225(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0) {
    if (allscale_fun_217(var_0)) {
        return allscale_fun_219(var_0);
    } else {
        return allscale_fun_226(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_224(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0) {
    return allscale_fun_225(var_0),allscale::make_ready_treeture();
}
struct __wi_allscale_wi_1_variant_1 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_1_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0) {
    return allscale_fun_224(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_222(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0) {
    struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ > var_1 = (struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ >&&)hpx::util::get<0 >(var_0).split_returns_stdpairrange__normal_iteratorint__vectorint_allocatorint____range__normal_iteratorint__vectorint_allocatorint____();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& var_2 = var_1.first;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& var_3 = var_1.second;
    return allscale::runtime::treeture_parallel(std::move((allscale::spawn<__wi_allscale_wi_1_work >)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const&)var_2, hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0))), std::move((allscale::spawn<__wi_allscale_wi_1_work >)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const&)var_3, hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_215(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0) {
    if (allscale_fun_217(var_0)) {
        return allscale_fun_219(var_0),allscale::make_ready_treeture();
    } else {
        return allscale_fun_222(var_0);
    };
}
struct __wi_allscale_wi_1_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_1_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_add_slash_vector_add_dot_cpp_17_12 > const& var_0) {
    return allscale_fun_215(var_0);
}
allscale::treeture<int32_t > __wi_main_variant_0::execute(hpx::util::tuple< > const& var_0) {
    return allscale_fun_4(var_0);
}
struct __wi_main_variant_1 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple< > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<int32_t > __wi_main_variant_1::execute(hpx::util::tuple< > const& var_0) {
    return allscale_fun_4(var_0);
}

