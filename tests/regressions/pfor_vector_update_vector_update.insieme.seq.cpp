/**
 * ------------------------ Auto-generated Code ------------------------ 
 *           This code was generated by the Insieme Compiler 
 * --------------------------------------------------------------------- 
 */
#include <algorithm>
#include <alloca.h>
#include <allscale/runtime.hpp>
#include <assert.h>
#include <iostream>
#include <stdbool.h>
#include <stdint.h>
#include <utility>

#ifdef __cplusplus
#define INS_INIT(...) __VA_ARGS__
#else
#define INS_INIT(...) (__VA_ARGS__)
#endif
#ifdef __cplusplus
#include <new>
#define INS_INPLACE_INIT(Loc,Type) new(Loc) Type
#else
#define INS_INPLACE_INIT(Loc,Type) *(Loc) = (Type)
#endif
#ifdef __cplusplus
				/** Workaround for libstdc++/libc bug.
				 *  There's an inconsistency between libstdc++ and libc regarding whether
				 *  ::gets is declared or not, which is only evident when using certain
				 *  compilers and language settings
				 *  (tested positively with clang 3.9 --std=c++14 and libc 2.17).
				 */
				#include <initializer_list>  // force libstdc++ to include its config
				#undef _GLIBCXX_HAVE_GETS    // correct broken config
#endif

/* ------- Program Code --------- */

struct __wi_main_name {
    static const char* name() { return "__wi_main"; }
};

struct __wi_main_variant_1;
typedef struct __wi_main_variant_1 __wi_main_variant_1;

struct __wi_main_variant_0;
typedef struct __wi_main_variant_0 __wi_main_variant_0;

using __wi_main_work = allscale::work_item_description<int32_t, __wi_main_name, allscale::no_serialization, __wi_main_variant_0, __wi_main_variant_1 >;

/* ------- Function Definitions --------- */
int32_t main() {
    return allscale::runtime::main_wrapper<__wi_main_work >();
}

ALLSCALE_REGISTER_TREETURE_TYPE(int32_t)
struct allscale_type_188;
typedef struct allscale_type_188 allscale_type_188;

struct allscale_type_188 {
    char data[16];;
};

struct allscale_type_189;
typedef struct allscale_type_189 allscale_type_189;

struct allscale_type_189 {
    char data[2];;
};

typedef void allscale_type_17(int32_t&);

typedef allscale_type_17* allscale_type_18;

struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12;
typedef struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12;

struct IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 {
    operator allscale_type_18() const;
    ;
    ;
    void operator()(int32_t& p2) const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ {
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > _begin;
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > _end;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& p2, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_() = default;
    bool IMP_empty_returns_bool() const;
    uint64_t IMP_size_returns_size_t() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& begin_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const;
    bool covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2) const;
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& end_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const;
    void forEach_lambdahomezangerlinsieme_devallscaletestpforvector_updatevector_updatecpp_11_12_returns_void(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 const& p2) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ grow_returns_allscaleapiuserdetailrange__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2, int32_t p3) const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ shrink_returns_allscaleapiuserdetailrange__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___(int32_t p2) const;
    struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ > split_returns_stdpairrange__normal_iteratorint__vectorint_allocatorint____range__normal_iteratorint__vectorint_allocatorint____() const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ _range;
    allscale::treeture<void > handle;;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_() = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2, allscale::treeture<void > const& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_() = default;
    operator allscale::treeture<void >() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
    allscale::treeture<void > const& getHandle_returns_const_coretask_reference_() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ getLeft_returns_iteration_reference__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& getRange_returns_const_range__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint____() const;
    void wait_returns_void() const;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2, allscale::treeture<void >&& p3);
    ~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& p2);
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&& p2) = default;
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency {
};

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies : public IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_dependency {
    ;
    ;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies split() const;
};

struct __wi_allscale_wi_0_variant_1;
typedef struct __wi_allscale_wi_0_variant_1 __wi_allscale_wi_0_variant_1;

struct __wi_allscale_wi_0_variant_0;
typedef struct __wi_allscale_wi_0_variant_0 __wi_allscale_wi_0_variant_0;

struct __wi_allscale_wi_0_name {
    static const char* name() { return "__wi_allscale_wi_0"; }
};

using __wi_allscale_wi_0_work = allscale::work_item_description<void, __wi_allscale_wi_0_name, allscale::no_serialization, __wi_allscale_wi_0_variant_0, __wi_allscale_wi_0_variant_1 >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_168(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_1) {
    return allscale::spawn<__wi_allscale_wi_0_work >(hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1), hpx::util::get<2 >(var_1));
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ allscale_fun_166(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_0, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 const& var_1, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies const& var_2) {
    return {var_0, allscale::runtime::make_prec_operation<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, void >(INS_INIT(hpx::util::tuple<IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 >){var_1, var_1}, &allscale_fun_168)(var_0)};
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 const& var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies const& var_3) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&&)allscale_fun_166(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(var_0, var_1), var_2, var_3);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 const& var_2) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(var_0, var_1, var_2, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies());
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_returns_detail_colon__colon_loop_reference_lt_typename_vector_lt_int_comma__allocator_lt_int_gt___gt__colon__colon_iterator_gt_(std::vector<int32_t, std::allocator<int32_t > >& var_0, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 const& var_1) {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_returns_detail_colon__colon_loop_reference_lt___normal_iterator_lt_int__star__comma__vector_lt_int_comma__allocator_lt_int_gt___gt___gt___gt_(var_0.begin(), var_0.end(), var_1);
}
/* ------- Function Definitions --------- */
int32_t IMP_main() {
    const int32_t var_0 = 100;
    std::vector<int32_t, std::allocator<int32_t > > var_1(((uint64_t)var_0), (0), (std::allocator<int32_t >()));
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_pfor_std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_returns_detail_colon__colon_loop_reference_lt_typename_vector_lt_int_comma__allocator_lt_int_gt___gt__colon__colon_iterator_gt_(var_1, INS_INIT(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12){});
    std::vector<int32_t, std::allocator<int32_t > >& var_2 = var_1;
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > var_3 = (__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > >&&)var_2.begin();
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > var_4 = (__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > >&&)var_2.end();
    while (__gnu_cxx::operator!=(var_3, var_4)) {
        int32_t const& var_5 = var_3.operator*();
        {
            if (var_5 != 1) {
                std::operator<<(std::operator<<(std::cout, "Invalid value: ").operator<<(var_5), "\n");
                return 1;
            };
            var_3.operator++();
        };
    };
    return 0;
}
/* ------- Function Definitions --------- */
allscale::treeture<int32_t > allscale_fun_2(hpx::util::tuple< > const& var_0) {
    return allscale::treeture<int32_t >(IMP_main());
}
struct __wi_main_variant_1 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple< > const& var_0);
    static constexpr bool valid = true;
};

/* ------- Function Definitions --------- */
IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12::operator allscale_type_18() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12::operator()(int32_t& var_1) const {
    (*(int32_t*)(&var_1))++;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::end_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const {
    return (*this)._end;
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::shrink_returns_allscaleapiuserdetailrange__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___(int32_t var_1) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::grow_returns_allscaleapiuserdetailrange__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_1, int32_t var_2) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_spliter_lt___gnu_cxx_colon__colon___normal_iterator_lt_int_space__star__comma__space_std_colon__colon_vector_lt_int_comma__space_std_colon__colon_allocator_lt_int_gt__space__gt__space__gt__space__gt__colon__colon_split_returns_std_colon__colon_pair_lt_rng_comma__rng_gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_0) {
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1 = var_0.begin_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___();
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_2 = var_0.end_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___();
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > var_3 = (__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > >&&)var_1.operator+(__gnu_cxx::operator-(var_2, var_1) / (int64_t)2);
    return (struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ >&&)std::make_pair(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(var_1, var_3), IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(var_3, var_2));
}
/* ------- Function Definitions --------- */
struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::split_returns_stdpairrange__normal_iteratorint__vectorint_allocatorint____range__normal_iteratorint__vectorint_allocatorint____() const {
    return (struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ >&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range_spliter_lt___gnu_cxx_colon__colon___normal_iterator_lt_int_space__star__comma__space_std_colon__colon_vector_lt_int_comma__space_std_colon__colon_allocator_lt_int_gt__space__gt__space__gt__space__gt__colon__colon_split_returns_std_colon__colon_pair_lt_rng_comma__rng_gt_(*this);
}
/* ------- Function Definitions --------- */
int32_t& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_access___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__returns_decltype_lparen__star__iter_rparen_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0) {
    return var_0.operator*();
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_forEach___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_returns_void(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_0, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 const& var_2) {
    __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > var_3 = var_0;
    while (__gnu_cxx::operator!=(var_3, var_1)) {
        var_2.operator()(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_access___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__returns_decltype_lparen__star__iter_rparen_(var_3));
        var_3.operator++();
    };
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::forEach_lambdahomezangerlinsieme_devallscaletestpforvector_updatevector_updatecpp_11_12_returns_void(IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 const& var_1) const {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_forEach___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__lambda_slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_returns_void((*this)._begin, (*this)._end, var_1);
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_2) : _begin(var_1), _end(var_2) {
    if ((*this).IMP_empty_returns_bool()) {
        (*this)._end.operator=((*this)._begin);
    };
}
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::IMP_empty_returns_bool() const {
    return (*this).IMP_size_returns_size_t() == (uint64_t)0;
}
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool;
typedef struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool;

struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool {
    ;
    ;
    uint64_t operator()(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& p2, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& p3) const;
};

/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::IMP_size_returns_size_t() const {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool().operator()((*this)._begin, (*this)._end);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
uint64_t IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_volume___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt__bool::operator()(__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_1, __gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& var_2) const {
    return (uint64_t)std::distance(var_1, var_2);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
bool IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::covers_returns_bool(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_1) const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
__gnu_cxx::__normal_iterator<int32_t*, std::vector<int32_t, std::allocator<int32_t > > > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::begin_returns_const___gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const {
    return (*this)._begin;
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_1, allscale::treeture<void > const& var_2) : _range(var_1), handle(var_2) { }
/* ------- Function Definitions --------- */
allscale::treeture<void > const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::getHandle_returns_const_coretask_reference_() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::getRange_returns_const_range__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint____() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::operator allscale::treeture<void >() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::getLeft_returns_iteration_reference__gnu_cxx__normal_iteratorint__stdvectorint_stdallocatorint___() const {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
void IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::wait_returns_void() const {
    (*this).handle.wait();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_1, allscale::treeture<void >&& var_2) : IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_(var_1, std::move(var_2)) { }
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::operator=(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const& var_1) {
    assert((bool)false && (bool)"This is an Insieme generated dummy function which should never be called");
}
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_::~IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_loop_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_() {
    (*(IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_iteration_reference___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_*)this).wait_returns_void();
}
/* ------- Function Definitions --------- */
struct IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies {
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies left;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies right;;
};

/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies::split() const {
    return (IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies&&)IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_SubDependencies_struct_allscale_colon__colon_api_colon__colon_user_colon__colon_no_dependencies();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void allscale_fun_181(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0) {
    hpx::util::get<0 >(var_0).forEach_lambdahomezangerlinsieme_devallscaletestpforvector_updatevector_updatecpp_11_12_returns_void(*(const IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12*)(&hpx::util::get<2 >(var_0)));
    return (void)0;
}
/* ------- Function Definitions --------- */
bool allscale_fun_172(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0) {
    return hpx::util::get<0 >(var_0).IMP_size_returns_size_t() <= (uint64_t)1;
}
/* ------- Function Definitions --------- */
void allscale_fun_174(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0) {
    hpx::util::get<0 >(var_0).forEach_lambdahomezangerlinsieme_devallscaletestpforvector_updatevector_updatecpp_11_12_returns_void(*(const IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12*)(&hpx::util::get<1 >(var_0)));
}
/* ------- Function Definitions --------- */
void rec(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0) {
    if (allscale_fun_172(var_0)) {
        return allscale_fun_174(var_0);
    } else {
        return allscale_fun_181(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_180(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0) {
    return rec(var_0),allscale::make_ready_treeture();
}
struct __wi_allscale_wi_0_variant_1 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_0_variant_1::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0) {
    return allscale_fun_180(var_0);
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_177(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0) {
    struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ > var_1 = (struct std::pair<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ >&&)hpx::util::get<0 >(var_0).split_returns_stdpairrange__normal_iteratorint__vectorint_allocatorint____range__normal_iteratorint__vectorint_allocatorint____();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& var_2 = var_1.first;
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_& var_3 = var_1.second;
    return allscale::runtime::treeture_parallel(std::move((allscale::spawn<__wi_allscale_wi_0_work >)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const&)var_2, hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0))), std::move((allscale::spawn<__wi_allscale_wi_0_work >)((IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_ const&)var_3, hpx::util::get<1 >(var_0), hpx::util::get<2 >(var_0))));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_170(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0) {
    if (allscale_fun_172(var_0)) {
        return allscale_fun_174(var_0),allscale::make_ready_treeture();
    } else {
        return allscale_fun_177(var_0);
    };
}
struct __wi_allscale_wi_0_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<void > __wi_allscale_wi_0_variant_0::execute(hpx::util::tuple<IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_detail_colon__colon_range___gnu_cxx_colon__colon___normal_iterator_lt_int__star__comma__std_colon__colon_vector_lt_int_comma__std_colon__colon_allocator_lt_int_gt___gt___gt_, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12, IMP___anon_tagtype__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12_void_int__ampersand__IMLOC__slash_home_slash_zangerl_slash_insieme_dev_slash_allscale_slash_test_slash_pfor_slash_vector_update_slash_vector_update_dot_cpp_11_12 > const& var_0) {
    return allscale_fun_170(var_0);
}
allscale::treeture<int32_t > __wi_main_variant_1::execute(hpx::util::tuple< > const& var_0) {
    return allscale_fun_2(var_0);
}
struct __wi_main_variant_0 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple< > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<int32_t > __wi_main_variant_0::execute(hpx::util::tuple< > const& var_0) {
    return allscale_fun_2(var_0);
}

