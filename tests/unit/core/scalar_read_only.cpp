/**
 * ------------------------ Auto-generated Code ------------------------
 *           This code was generated by the Insieme Compiler
 * ---------------------------------------------------------------------
 */
#include <alloca.h>
#include <allscale/api/user/data/scalar.h>
#include <allscale/runtime.hpp>
#include <allscale/utils/assert.h>
#include <allscale/utils/serializer.h>
#include <iostream>
#include <stdbool.h>
#include <stdint.h>
#include <utility>

#ifdef __cplusplus
#define INS_INIT(...) __VA_ARGS__
#else
#define INS_INIT(...) (__VA_ARGS__)
#endif
#ifdef __cplusplus
#include <new>
#define INS_INPLACE_INIT(Loc,Type) new(Loc) Type
#else
#define INS_INPLACE_INIT(Loc,Type) *(Loc) = (Type)
#endif
#ifdef __cplusplus
				/** Workaround for libstdc++/libc bug.
				 *  There's an inconsistency between libstdc++ and libc regarding whether
				 *  ::gets is declared or not, which is only evident when using certain
				 *  compilers and language settings
				 *  (tested positively with clang 3.9 --std=c++14 and libc 2.17).
				 */
				#include <initializer_list>  // force libstdc++ to include its config
				#undef _GLIBCXX_HAVE_GETS    // correct broken config
#endif

/* ------- Program Code --------- */

struct __wi_main_name {
    static const char* name() { return "__wi_main"; }
};

struct __wi_main_variant_0;
typedef struct __wi_main_variant_0 __wi_main_variant_0;

struct __wi_main_variant_1;
typedef struct __wi_main_variant_1 __wi_main_variant_1;

struct __wi_main_can_split;
typedef struct __wi_main_can_split __wi_main_can_split;

using __wi_main_work = allscale::work_item_description<int32_t, __wi_main_name, allscale::no_serialization, __wi_main_variant_0, __wi_main_variant_1, __wi_main_can_split >;

/* ------- Function Definitions --------- */
int32_t main(int32_t var_0, char** var_1) {
    return allscale::runtime::main_wrapper<__wi_main_work >(var_0, var_1);
}

struct IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11;
typedef struct IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11;

using data_item_type_1 = allscale::api::user::data::Scalar<int32_t >;
REGISTER_DATAITEMSERVER_DECLARATION(data_item_type_1)
REGISTER_DATAITEMSERVER(data_item_type_1)
struct IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 {
    allscale::runtime::DataItemReference<allscale::api::user::data::Scalar<int32_t > > capture_a;;
    void operator()() const;
    void store(allscale::utils::ArchiveWriter& p2) const;
    ;
    ;
    static IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 load(allscale::utils::ArchiveReader& var_0);
};

struct IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3;
typedef struct IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3;

struct IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 {
    ;
    ;
    void store(allscale::utils::ArchiveWriter& p2) const;
    static IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 load(allscale::utils::ArchiveReader& var_0);
};

struct __wi_allscale_wi_1_variant_0;
typedef struct __wi_allscale_wi_1_variant_0 __wi_allscale_wi_1_variant_0;

struct __wi_allscale_wi_1_can_split;
typedef struct __wi_allscale_wi_1_can_split __wi_allscale_wi_1_can_split;

struct __wi_allscale_wi_1_name {
    static const char* name() { return "__wi_allscale_wi_1"; }
};

struct __wi_allscale_wi_1_variant_1;
typedef struct __wi_allscale_wi_1_variant_1 __wi_allscale_wi_1_variant_1;

using __wi_allscale_wi_1_work = allscale::work_item_description<void, __wi_allscale_wi_1_name, allscale::do_serialization, __wi_allscale_wi_1_variant_0, __wi_allscale_wi_1_variant_1, __wi_allscale_wi_1_can_split >;

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_45(allscale::runtime::dependencies const& var_0, hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_1) {
    return allscale::spawn_first_with_dependencies<__wi_allscale_wi_1_work >(var_0, hpx::util::get<0 >(var_1), hpx::util::get<1 >(var_1));
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_code_slash__slash__dot__dot__slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_colon_13_colon_11_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::dependencies&& var_0, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 const& var_1) {
    return allscale::runtime::make_prec_operation<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, void >((hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const&)INS_INIT(hpx::util::tuple<IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 >){var_1}, &allscale_fun_45)(std::move(var_0), (IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 const&)IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3{});
}
/* ------- Function Definitions --------- */
allscale::treeture<void > IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_code_slash__slash__dot__dot__slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_colon_13_colon_11_rparen__space__lparen_void_rparen__gt__space__gt_(IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 const& var_0) {
    return IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async_allscale_colon__colon_api_colon__colon_core_colon__colon_no_dependencies__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_code_slash__slash__dot__dot__slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_colon_13_colon_11_rparen__space__lparen_void_rparen__gt__space__gt_(allscale::runtime::after(), var_0);
}
/* ------- Function Definitions --------- */
int32_t allscale_fun_5(int32_t var_0, char** var_1) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Scalar<int32_t > > var_2 = allscale::runtime::DataItemManager::create<allscale::api::user::data::Scalar<int32_t > >();
    IMP_allscale_colon__colon_api_colon__colon_user_colon__colon_algorithm_colon__colon_async__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_returns_core_colon__colon_treeture_lt_std_colon__colon_result_of_t_lt__lparen_lambda_space_at_space__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_code_slash__slash__dot__dot__slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_colon_13_colon_11_rparen__space__lparen_void_rparen__gt__space__gt_(INS_INIT(IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11){(allscale::runtime::DataItemReference<allscale::api::user::data::Scalar<int32_t > > const&)var_2}).wait();
    return 0;
}
ALLSCALE_REGISTER_TREETURE_TYPE(int32_t)
/* ------- Function Definitions --------- */
allscale::treeture<int32_t > allscale_fun_3(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale::treeture<int32_t >(allscale_fun_5(hpx::util::get<0 >(var_0), hpx::util::get<1 >(var_0)));
}
struct __wi_main_variant_0 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple<int32_t, char** > const& var_0);
    static constexpr bool valid = true;
};

/* ------- Function Definitions --------- */
IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11::load(allscale::utils::ArchiveReader& var_0) {
    allscale::runtime::DataItemReference<allscale::api::user::data::Scalar<int32_t > > var_1 = var_0.read<allscale::runtime::DataItemReference<allscale::api::user::data::Scalar<int32_t > > >();
    return {std::move(var_1)};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11::operator()() const {
    allscale::api::user::data::Scalar<int32_t >&& var_1 = allscale::runtime::DataItemManager::get((allscale::runtime::DataItemReference<allscale::api::user::data::Scalar<int32_t > >&)(*this).capture_a);
    int32_t var_2 = var_1.get();
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11::store(allscale::utils::ArchiveWriter& var_1) const {
    var_1.write<allscale::runtime::DataItemReference<allscale::api::user::data::Scalar<int32_t > > >((*this).capture_a);
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
void IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3::store(allscale::utils::ArchiveWriter& var_1) const { }
/* ------- Function Definitions --------- */
IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3 IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3::load(allscale::utils::ArchiveReader& var_0) {
    return {};
}
/* ------- Function Definitions --------- */
/* ------- Function Definitions --------- */
template<typename T>
struct is_allscale_fixed_sized_array : public std::false_type {};

template<typename T>
struct to_std_array_type;

namespace allscale {
    namespace utils {
        template<typename T>
        struct serializer<T,typename std::enable_if<is_allscale_fixed_sized_array<T>::value,void>::type> {
            using array_t = typename to_std_array_type<T>::type;
            static T load(ArchiveReader& a) {
                return *reinterpret_cast<T*>(&serializer<array_t>::load(a)[0]);
            }
            static void store(ArchiveWriter& a, const T& value) {
                serializer<array_t>::store(a,reinterpret_cast<const array_t&>(value));
            }
        };
    }
}

struct allscale_type_55;
typedef struct allscale_type_55 allscale_type_55;

struct allscale_type_55 {
    char data[132];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_55> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_55> { using type = std::array<char,132u>; };

struct allscale_type_56;
typedef struct allscale_type_56 allscale_type_56;

struct allscale_type_56 {
    char data[23];;
};

template<> struct is_allscale_fixed_sized_array<allscale_type_56> : public std::true_type {};
template<> struct to_std_array_type<allscale_type_56> { using type = std::array<char,23u>; };

/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_49(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    hpx::util::get<1 >(var_0).operator()();
    return ((void)0, allscale::make_ready_treeture());
}
/* ------- Function Definitions --------- */
allscale::treeture<void > allscale_fun_47(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    return allscale_fun_49(var_0);
}
/* ------- Function Definitions --------- */
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Scalar<int32_t > > > allscale_fun_57(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    return INS_INIT(hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Scalar<int32_t > > >){allscale::runtime::createDataItemRequirement((allscale::runtime::DataItemReference<allscale::api::user::data::Scalar<int32_t > >&)hpx::util::get<1 >(*(const hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 >*)(&var_0)).capture_a, allscale::api::user::data::detail::ScalarRegion{(bool)true}, allscale::runtime::AccessMode::ReadOnly)};
}
struct __wi_allscale_wi_1_variant_0 {
    static allscale::treeture<void > execute(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Scalar<int32_t > > > get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0);
    static constexpr bool valid = true;
};

hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Scalar<int32_t > > > __wi_allscale_wi_1_variant_0::get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    return allscale_fun_57(var_0);
}
allscale::treeture<void > __wi_allscale_wi_1_variant_0::execute(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    return allscale_fun_47(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_65(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    return (bool)true;
}
/* ------- Function Definitions --------- */
bool allscale_fun_69(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    return !allscale_fun_65(var_0);
}
struct __wi_allscale_wi_1_can_split {
    static bool call(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0);
};

bool __wi_allscale_wi_1_can_split::call(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    return allscale_fun_69(var_0);
}
/* ------- Function Definitions --------- */
void allscale_fun_68(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    hpx::util::get<1 >(var_0).operator()();
    return (void)0;
}
/* ------- Function Definitions --------- */
void allscale_fun_67(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    hpx::util::get<1 >(var_0).operator()();
    return;
}
/* ------- Function Definitions --------- */
void rec(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    if (allscale_fun_65(var_0)) {
        return allscale_fun_67(var_0);
    } else {
        return allscale_fun_68(var_0);
    };
}
/* ------- Function Definitions --------- */
allscale::runtime::unused_type allscale_fun_62(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    rec(var_0);
    return {};
}
struct __wi_allscale_wi_1_variant_1 {
    static allscale::runtime::unused_type execute(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0);
    static hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Scalar<int32_t > > > get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0);
    static constexpr bool valid = true;
};

allscale::runtime::unused_type __wi_allscale_wi_1_variant_1::execute(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    return allscale_fun_62(var_0);
}
hpx::util::tuple<allscale::runtime::DataItemRequirement<allscale::api::user::data::Scalar<int32_t > > > __wi_allscale_wi_1_variant_1::get_requirements(hpx::util::tuple<IMP_empty_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_api_slash_code_slash_api_slash_include_slash_allscale_slash_api_slash_user_slash_algorithm_slash_async_dot_h_63_3, IMP__Insieme__lambda__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11_allscale_colon__colon_api_colon__colon_user_colon__colon_data_colon__colon_Scalar_lt_int_gt__space__ampersand__void_IMLOC__slash_home_slash_heller_slash_projects_slash_allscale_compiler_slash_test_slash_data_requirements_slash_scalar_read_only_slash_scalar_read_only_dot_cpp_13_11 > const& var_0) {
    return allscale_fun_57(var_0);
}
allscale::treeture<int32_t > __wi_main_variant_0::execute(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_3(var_0);
}
struct __wi_main_variant_1 {
    static allscale::treeture<int32_t > execute(hpx::util::tuple<int32_t, char** > const& var_0);
    static constexpr bool valid = true;
};

allscale::treeture<int32_t > __wi_main_variant_1::execute(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_3(var_0);
}
/* ------- Function Definitions --------- */
bool allscale_fun_71(hpx::util::tuple<int32_t, char** > const& var_0) {
    return (bool)false;
}
struct __wi_main_can_split {
    static bool call(hpx::util::tuple<int32_t, char** > const& var_0);
};

bool __wi_main_can_split::call(hpx::util::tuple<int32_t, char** > const& var_0) {
    return allscale_fun_71(var_0);
}

